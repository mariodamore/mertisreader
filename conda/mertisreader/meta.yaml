package:
  name: mertisreader
  version: 0.0.3
source:
  sha256: 41d666edf17302558c1373bbe4f8ecdec0468dd020c95c5f265deab8d588e294
  url: https://files.pythonhosted.org/packages/a3/59/c504a8fab331caaeccec2dbd8f4afeb49947513aa103c3e419ec2df33b32/mertisreader-0.0.3.tar.gz
about:
  description: "# install\n\n\n<!-- WARNING: THIS FILE WAS AUTOGENERATED! DO NOT EDIT!\
    \ -->\n\n## mertisreader - Quick cheatsheet\n\nImport Required Libraries\n\n```\
    \ python\nimport pathlib\nimport rich\nimport mertisreader as mr\n\nprint(\"Libraries\
    \ imported successfully.\")\n```\n\n    Libraries imported successfully.\n\n###\
    \ Initialize MERTISDataPackReader\n\nInitialize the MERTISSessionReader with the\
    \ input directory and optional\nparameters for output directory and log level.\n\
    \nThe `../data/` contains a subset of the Moon flyby , technically called\nEarth\
    \ Gravity Assist (EGA).\n\nThe directory name reflects ESA-PSA/PDS4 naminhc scheme\
    \ and the start /\nstop data acquistion , plus the data pack creation.\n\nUnder\
    \ this, there the different data levels :\n\n| Level | Units           | Geometry\
    \ | Calibration Targets | TIS Aligned |\n|-------|-----------------|----------|---------------------|-------------|\n\
    | raw   | Digital Numbers | No       | No                  | No          |\n|\
    \ par   | Physical Units  | Yes      | Yes                 | No          |\n|\
    \ cal   | Physical Units  | Yes      | No                  | Yes         |\n\n\
    - **Calibration Target** : if the currnet level contains calibration\n  target\
    \ measurements or only scientifically relevant one.\n- **TIS Aligned:** : the\
    \ TIS (Thermal Infrared Spectrometer) wavelength\n  grid is aligned with the detector\u2019\
    s X and Y axes, so all pixels share\n  the same wavelength grid. If not aligned,\
    \ each pixel has its own\n  wavelength grid, making data comparison and analysis\
    \ more complex.\n\nJust change the level directory, the package can handle all\
    \ the levels\nand read the data, take care of not calling geometry related paramter\
    \ on\nRAW.\n\n``` python\ninput_path = pathlib.Path('../data/bcmer_tm_all_START-20200409T000000_END-20200410T000000_CRE-20240717T132010-ParamEventBootSciHK-short/cal')\n\
    output_path = pathlib.Path('/tmp/')\nlog_level = 'INFO'\n\nif not input_path.exists():\n\
    \    print(f\"Input path {input_path} does not exist.\")\nelse:\n    print(f\"\
    Reading path {input_path}\")\n\nms_reader = mr.MERTISDataPackReader(input_dir=input_path,\
    \ output_dir=output_path, log_level=log_level)\n\nprint(f'MERTISDataPackReader\
    \ initialized with input directory: {ms_reader.input_dir}')\nprint(f'Output directory:\
    \ {ms_reader.output_dir}')\nprint(f'Log level: {ms_reader.log_level}')\n```\n\n\
    \    2025-10-01 17:28:17,029|3540409|INFO|input_dir=PosixPath('../data/bcmer_tm_all_START-20200409T000000_END-20200410T000000_CRE-20240717T132010-ParamEventBootSciHK-short/cal')\n\
    \n    Reading path ../data/bcmer_tm_all_START-20200409T000000_END-20200410T000000_CRE-20240717T132010-ParamEventBootSciHK-short/cal\n\
    \    MERTISDataPackReader initialized with input directory: ../data/bcmer_tm_all_START-20200409T000000_END-20200410T000000_CRE-20240717T132010-ParamEventBootSciHK-short/cal\n\
    \    Output directory: /tmp\n    Log level: INFO\n\nShow Files in Input Directory\n\
    \n``` python\nms_reader.show_files()\n```\n\n    All files in input_dir :\n\n\
    <pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu\
    \ Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #800080;\
    \ text-decoration-color: #800080; font-weight: bold\">Counter</span><span style=\"\
    font-weight: bold\">({</span><span style=\"color: #008000; text-decoration-color:\
    \ #008000\">'.dat'</span>: <span style=\"color: #008080; text-decoration-color:\
    \ #008080; font-weight: bold\">2</span>, <span style=\"color: #008000; text-decoration-color:\
    \ #008000\">'.lblx'</span>: <span style=\"color: #008080; text-decoration-color:\
    \ #008080; font-weight: bold\">3</span>, <span style=\"color: #008000; text-decoration-color:\
    \ #008000\">'.fits'</span>: <span style=\"color: #008080; text-decoration-color:\
    \ #008080; font-weight: bold\">1</span><span style=\"font-weight: bold\">})</span>\n\
    </pre>\n\n    All files in input_dir matching old pattern <v0.2.6 (\\d{8}_\\d{8}):\n\
    \n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu\
    \ Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #800080;\
    \ text-decoration-color: #800080; font-weight: bold\">Counter</span><span style=\"\
    font-weight: bold\">()</span>\n</pre>\n\n    All files in input_dir matching new\
    \ pattern >=v0.2.6 (mer_cal_sc_tis_YYYYMMDD_1-...):\n\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu\
    \ Sans Mono',consolas,'Courier New',monospace\"><span style=\"color: #800080;\
    \ text-decoration-color: #800080; font-weight: bold\">Counter</span><span style=\"\
    font-weight: bold\">({</span><span style=\"color: #008000; text-decoration-color:\
    \ #008000\">'mer_cal_sc_tis'</span>: <span style=\"color: #008080; text-decoration-color:\
    \ #008080; font-weight: bold\">1</span><span style=\"font-weight: bold\">})</span>\n\
    </pre>\n\nList File Types\n\n``` python\nms_reader.listfiletypes()\n```\n\n<pre\
    \ style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu\
    \ Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"\
    >{</span>\n    <span style=\"color: #008000; text-decoration-color: #008000\"\
    >'hk_default'</span>: <span style=\"font-weight: bold\">[</span><span style=\"\
    color: #008000; text-decoration-color: #008000\">'mer_cal_hk_default_20200409_1-0651130766-12538__0_1.dat'</span><span\
    \ style=\"font-weight: bold\">]</span>,\n    <span style=\"color: #008000; text-decoration-color:\
    \ #008000\">'hk_extended'</span>: <span style=\"font-weight: bold\">[</span><span\
    \ style=\"color: #008000; text-decoration-color: #008000\">'mer_cal_hk_extended_20200409_1-0651130766-12595__0_1.dat'</span><span\
    \ style=\"font-weight: bold\">]</span>,\n    <span style=\"color: #008000; text-decoration-color:\
    \ #008000\">'sc_tis'</span>: <span style=\"font-weight: bold\">[</span><span style=\"\
    color: #008000; text-decoration-color: #008000\">'mer_cal_sc_tis_20200409_1-0651130819-21186__0_1.fits'</span><span\
    \ style=\"font-weight: bold\">]</span>,\n    <span style=\"color: #008000; text-decoration-color:\
    \ #008000\">'sc_tir'</span>: <span style=\"font-weight: bold\">[]</span>,\n  \
    \  <span style=\"color: #008000; text-decoration-color: #008000\">'sc_tis_ql'</span>:\
    \ <span style=\"font-weight: bold\">[]</span>,\n    <span style=\"color: #008000;\
    \ text-decoration-color: #008000\">'sc_tir_ql'</span>: <span style=\"font-weight:\
    \ bold\">[]</span>\n<span style=\"font-weight: bold\">}</span>\n</pre>\n\n<pre\
    \ style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu\
    \ Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"\
    >{</span><span style=\"color: #008000; text-decoration-color: #008000\">'hk_default'</span>:\
    \ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\"\
    >1</span>, <span style=\"color: #008000; text-decoration-color: #008000\">'hk_extended'</span>:\
    \ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\"\
    >1</span>, <span style=\"color: #008000; text-decoration-color: #008000\">'sc_tis'</span>:\
    \ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\"\
    >1</span>, <span style=\"color: #008000; text-decoration-color: #008000\">'sc_tir'</span>:\
    \ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\"\
    >0</span>, <span style=\"color: #008000; text-decoration-color: #008000\">'sc_tis_ql'</span>:\
    \ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\"\
    >0</span>, <span style=\"color: #008000; text-decoration-color: #008000\">'sc_tir_ql'</span>:\
    \ <span style=\"color: #008080; text-decoration-color: #008080; font-weight: bold\"\
    >0</span><span style=\"font-weight: bold\">}</span>\n</pre>\n\nCollect Data\n\n\
    ``` python\nms_reader.data_collector()\n\nprint(f'Collected data keys: {ms_reader.collect_data.keys()}')\n\
    for key, value in ms_reader.collect_data.items():\n    print(f'{key}: {len(value)}\
    \ files collected')\n```\n\n    Reading filetype: hk_default from mer_cal_hk_default_20200409_1-0651130766-12538__0_1\n\
    \    Reading filetype: hk_extended from mer_cal_hk_extended_20200409_1-0651130766-12595__0_1\n\
    \    Reading filetype: tis from mer_cal_sc_tis_20200409_1-0651130819-21186__0_1\n\
    \    Collected data keys: dict_keys(['hk_default', 'hk_extended', 'tis'])\n  \
    \  hk_default: 1 files collected\n    hk_extended: 1 files collected\n    tis:\
    \ 1 files collected\n\nAssemble Data\n\n``` python\nms_reader.data_assembler(verbose=True)\n\
    ```\n\n    Output()\n\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu\
    \ Sans Mono',consolas,'Courier New',monospace\">Reading filetype: tis from \n\
    ../data/bcmer_tm_all_START-20200409T000000_END-20200410T000000_CRE-20240717T132010-ParamEventBootSciHK-short/cal/me\n\
    r_cal_sc_tis_20200409_1-0651130819-21186__0_1.fits\n</pre>\n\n<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu\
    \ Sans Mono',consolas,'Courier New',monospace\"></pre>\n\n    n_wav=40 # generic\
    \ wavelengths : not precise enough for scientific analysis!\n    |    | tis_stem\
    \                                        |   finite(geo) |   geo.size |\n    |---:|:------------------------------------------------|--------------:|-----------:|\n\
    \    |  0 | mer_cal_sc_tis_20200409_1-0651130819-21186__0_1 |           672 |\
    \      10500 |\n    Indices of measurements targets (HK_STAT_TIS_DATA_ACQ_TARGET):\n\
    \    space_index.shape=(21,)\n    bb7_index.shape=(0,)\n    bb3_index.shape=(0,)\n\
    \    planet_index.shape=(0,)\n    Collected data statistics:\n    Number of TIS\
    \ files: 1\n    Number of HK files: 2\n    Number of TIR files: 0\n    Number\
    \ of TIS QL files: 0\n    Number of TIR QL files: 0\n\nVerify the Assembled Data\n\
    \n``` python\n# RAW does not have geometry data\nif ms_reader.processing_level\
    \ != 'RAW':\n    print(f'Geometry data keys: {ms_reader.geom_ls.keys()}')\nprint(f'Frames\
    \ data keys: {ms_reader.frames.keys()}')\nprint(f'Wavelengths data keys: {ms_reader.wavelengths.keys()}')\n\
    print(f'MERTIS TIS metadata keys: {ms_reader.mertis_tis_metadata.keys()}')\nprint(f'Space\
    \ index shape: {ms_reader.space_index.shape}')\nprint(f'BB7 index shape: {ms_reader.bb7_index.shape}')\n\
    print(f'BB3 index shape: {ms_reader.bb3_index.shape}')\nprint(f'Planet index shape:\
    \ {ms_reader.planet_index.shape}')\n```\n\n    Geometry data keys: dict_keys(['mer_cal_sc_tis_20200409_1-0651130819-21186__0_1'])\n\
    \    Frames data keys: dict_keys(['mer_cal_sc_tis_20200409_1-0651130819-21186__0_1'])\n\
    \    Wavelengths data keys: dict_keys(['mer_cal_sc_tis_20200409_1-0651130819-21186__0_1'])\n\
    \    MERTIS TIS metadata keys: dict_keys(['mer_cal_sc_tis_20200409_1-0651130819-21186__0_1'])\n\
    \    Space index shape: (21,)\n    BB7 index shape: (0,)\n    BB3 index shape:\
    \ (0,)\n    Planet index shape: (0,)\n\nA data directory can contains more file\
    \ for each type, those are\ncollected in a dict for each `ms_reader` variable\
    \ , so it is handy to\ndefine which file we want to work with after inspection,\
    \ like the\nfollowing :\n\n``` python\nfile_key = list(ms_reader.frames.keys())[0]\n\
    print(f'Example DataCube shape for file {file_key}: {ms_reader.frames[file_key].shape}')\n\
    ```\n\n    Example DataCube shape for file mer_cal_sc_tis_20200409_1-0651130819-21186__0_1:\
    \ (40, 100, 21)\n\n### Show some data & plots\n\nnow, let\u2019s see some (meta)data:\n\
    \n``` python\nms_reader.mertis_tis_metadata[file_key].iloc[0:4].T\n```\n\n<div>\n\
    <style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align:\
    \ middle;\n    }\n&#10;    .dataframe tbody tr th {\n        vertical-align: top;\n\
    \    }\n&#10;    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n\
    \n|  | 0 | 1 | 2 | 3 |\n|----|----|----|----|----|\n| TIME_UTC | 2020-04-09T05:40:20.710Z\
    \ | 2020-04-09T05:40:31.748Z | 2020-04-09T05:40:32.548Z | 2020-04-09T05:40:33.348Z\
    \ |\n| TIME_OBT | 1/0651130819:21186 | 1/0651130830:23689 | 1/0651130831:10567\
    \ | 1/0651130831:62998 |\n| TimeStamp | 651130823\\.044403 | 651130830\\.950928\
    \ | 651130831\\.746674 | 651130832\\.544235 |\n| HK_STAT_TIS_DATA_ACQ_ID | 3740\
    \ | 3743 | 3744 | 3745 |\n| HK_STAT_TIS_DATA_ACQ_TYPE | Sci_Raw | Sci_Subtracted_BB3\
    \ | Sci_Subtracted_BB3 | Sci_Subtracted_BB3 |\n| HK_STAT_TIS_DATA_ACQ_TARGET |\
    \ Space | Space | Space | Space |\n| HK_STAT_BOL_BIAS_VOLT_ACTIVE_PARAM_SET |\
    \ 2 | 2 | 2 | 2 |\n| HK_STAT_TIS_DATA_ACQ_TIME | 651130819\\.323273 | 651130830\\\
    .361465 | 651130831\\.16124 | 651130831\\.961273 |\n| PAR_TIS_BIN_MODE | 1x2 |\
    \ 1x2 | 1x2 | 1x2 |\n| PAR_TIS_WIN_SIZE | 100x80pixel | 100x80pixel | 100x80pixel\
    \ | 100x80pixel |\n| PAR_TIS_COMP_MODE | lossless | lossless | lossless | lossless\
    \ |\n| HK_STAT_TIS_COMP_VERSION | 1 | 1 | 1 | 1 |\n| HK_STAT_TIS_COMP_RICE_K_VALUE\
    \ | 8 | 8 | 8 | 8 |\n| HK_STAT_TIS_COMP_INPUT_LENGTH | 100 | 100 | 100 | 100 |\n\
    | HK_STAT_TIS_COMP_NUM_BANDS | 5 | 5 | 5 | 5 |\n| HK_STAT_TIS_NUM_OVERSAMP | 0\
    \ | 32 | 32 | 32 |\n| HK_TEMP_BOL_CHIP | 15.0 | 15.0 | 15.003 | 15.002 |\n| DAT_TIS_OFFSET_MACRO_PIXEL\
    \ | 1 | 2052 | 2052 | 2053 |\n| HK_TEMP_BOL_HOUSING | 9.527 | 9.519 | 9.519 |\
    \ 9.52 |\n| HK_TEMP_OST_BASE_PLATE | 9.894 | 9.891 | 9.889 | 9.889 |\n| PAR_TIS_DATA_NOISE_REDUCTION\
    \ | 0 | 0 | 0 | 0 |\n| HK_STAT_TIS_TOTAL_PACKET_NUM | 1 | 1 | 1 | 1 |\n| HK_STAT_TIS_CURRENT_PACKET_NUM\
    \ | 1 | 1 | 1 | 1 |\n| HK_STAT_TIS_NUM_DATA_WORDS | 384 | 1206 | 1200 | 1208 |\n\
    \n</div>\n\n``` python\nfrom matplotlib import pyplot as plt\nimport matplotlib.dates\
    \ as mdates\n\nax = ms_reader.mertis_tis_metadata[file_key]\\\n    .set_index('TIME_UTC').loc[:,'HK_STAT_TIS_COMP_VERSION':]\\\
    \n        .plot(figsize=[10,15], legend=True, title='MERTIS TIS Metadata', grid=True,\
    \ subplots=True);\n\nax[-1].xaxis.set_major_formatter(mdates.DateFormatter('%H:%M:%S'))\n\
    ax[-1].set_xlabel('TIME_UTC', fontsize=10)\nplt.tight_layout()\n\nplt.tight_layout()\n\
    ```\n\n![](index_files/figure-commonmark/cell-12-output-1.png)\n\nNow some data\
    \ from TIS detector, each one a 2D array.\n\nFor those data, dufing cruise, the\
    \ scientific data are collected ueing\nthe Space port and not Planet port.\n\n\
    TIS Datacube size is the union of several TIS 2D array measurement, each\none\
    \ typically `(40, 100)` = (`n_spectral`,`n_spatial`), depending on\nbinning and\
    \ windowing.\n\n``` python\nms_reader.frames[file_key].shape\n```\n\n    (40,\
    \ 100, 21)\n\n`(40, 100, 21)` = (`n_spectral`,`n_spatial`,`n_frames`)\n\n- `n_spectral`\
    \ : number of spectral channels, depends on pixel spectral\n  binning (1,2,4)\
    \ result in `n_spatial` == (80,40,20)\n- `n_spatial` : number of measurements\
    \ spatial pixels, depends on pixel\n  spatial binning (1,2,4) result in `n_spatial`\
    \ == (100,50,25)\n- `n_frames` : number of TIS frames, or measurements, this correspond\
    \ to\n  the time axis.\n\n``` python\nfull_frames_3D = ms_reader.frames[file_key]\n\
    wav = ms_reader.wavelengths[file_key]\nplot_index = ms_reader.space_index\nprint(f'plot_index:\
    \ {plot_index}')\n\nfig, ax = plt.subplots(ncols=2,nrows=2, figsize = [22,12])\n\
    \nfig.suptitle(f'MERTIS TIS DataCube - {file_key} \\n'\n             f'average\
    \ over the measurements {full_frames_3D.shape} -> {full_frames_3D[:,:,0].shape}',\n\
    \             fontsize=16)\ntitle = 'Space'\nax[0][0].plot(wav,full_frames_3D[:,:,plot_index].mean(axis=2));\n\
    ax[0][0].set_title(f'{title} - frames average ')\nax[0][1].imshow(full_frames_3D[:,:,plot_index].mean(axis=2),aspect='auto',cmap=plt.cm.Spectral_r)\n\
    ax[0][1].set_title(f'{title} - frames average')\n\nax[1][0].set_title(f'{title}\
    \ - frames std')\nax[1][0].plot(wav,full_frames_3D[:,:,plot_index].std(axis=2));\n\
    ax[1][1].set_title(f'{title} - frames std')\nax[1][1].imshow(full_frames_3D[:,:,plot_index].std(axis=2),aspect='auto',cmap=plt.cm.Spectral_r)\n\
    ```\n\n    plot_index: RangeIndex(start=0, stop=21, step=1)\n\n![](index_files/figure-commonmark/cell-14-output-2.png)\n\
    \nThe higher level pixel near 40 are the \u201Cfirst light\u201D MERTIS ever saw\
    \ in\nspace, from the Moon.\n\nNow some geometry data , not available in RAW data.\n\
    \n``` python\nrich.print(ms_reader.geom_ls[file_key].keys())\n```\n\n<pre style=\"\
    white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans\
    \ Mono',consolas,'Courier New',monospace\"><span style=\"color: #800080; text-decoration-color:\
    \ #800080; font-weight: bold\">dict_keys</span><span style=\"font-weight: bold\"\
    >([</span><span style=\"color: #008000; text-decoration-color: #008000\">'MERTIS_TIS_GEOMETRY_TARGET_LONGITUDE'</span>,\
    \ <span style=\"color: #008000; text-decoration-color: #008000\">'MERTIS_TIS_GEOMETRY_TARGET_LATITUDE'</span>,\
    \ \n<span style=\"color: #008000; text-decoration-color: #008000\">'MERTIS_TIS_GEOMETRY_SUBSPACECRAFT_LONGITUDE'</span>,\
    \ <span style=\"color: #008000; text-decoration-color: #008000\">'MERTIS_TIS_GEOMETRY_SUBSPACECRAFT_LATITUDE'</span>,\
    \ \n<span style=\"color: #008000; text-decoration-color: #008000\">'MERTIS_TIS_GEOMETRY_SUB_SUN_LONGITUDE'</span>,\
    \ <span style=\"color: #008000; text-decoration-color: #008000\">'MERTIS_TIS_GEOMETRY_SUB_SUN_LATITUDE'</span>,\
    \ \n<span style=\"color: #008000; text-decoration-color: #008000\">'MERTIS_TIS_GEOMETRY_TARGET_ALTITUDE'</span>,\
    \ <span style=\"color: #008000; text-decoration-color: #008000\">'MERTIS_TIS_GEOMETRY_SUBSPACECRAFT_ALTITUDE'</span>,\
    \ \n<span style=\"color: #008000; text-decoration-color: #008000\">'MERTIS_TIS_GEOMETRY_SUB_SUN_ALTITUDE'</span>,\
    \ <span style=\"color: #008000; text-decoration-color: #008000\">'MERTIS_TIS_GEOMETRY_TARGET_DISTANCE'</span>,\
    \ \n<span style=\"color: #008000; text-decoration-color: #008000\">'MERTIS_TIS_GEOMETRY_TARGET_ANGULAR_DIAMETER'</span>,\
    \ <span style=\"color: #008000; text-decoration-color: #008000\">'MERTIS_TIS_GEOMETRY_LOCAL_TIME'</span>,\
    \ \n<span style=\"color: #008000; text-decoration-color: #008000\">'MERTIS_TIS_GEOMETRY_TARGET_PHASE_ANGLE'</span>,\
    \ <span style=\"color: #008000; text-decoration-color: #008000\">'MERTIS_TIS_GEOMETRY_TARGET_EMISSION_ANGLE'</span>,\
    \ \n<span style=\"color: #008000; text-decoration-color: #008000\">'MERTIS_TIS_GEOMETRY_TARGET_INCIDENCE_ANGLE'</span><span\
    \ style=\"font-weight: bold\">])</span>\n</pre>\n\n``` python\nms_reader.geom_ls[file_key]['MERTIS_TIS_GEOMETRY_TARGET_LONGITUDE'].shape\n\
    ```\n\n    (5, 100, 21)\n\nThe dimension for the geoemtry variables are `(5, 100,\
    \ 21)` == (corners,\nn_spatial, n_frames) :\n\n- **Corners** of each pixel used\
    \ for SPICE calculation, in order,\n  looking from instrument , X axis up = (center,\
    \ upper left, upper\n  right, lower right, lower left)\n\n<!-- -->\n\n    C2 \
    \      C1\n     +-------+\n     |       |\n     |  C0   |\n     |       |\n  \
    \   +-------+\n    C3      C4\n\n- `n_spatial` : number of measurements spatial\
    \ pixels, depends on pixel\n  spatial binning (1,2,4) result in `n_spatial` ==\
    \ (100,50,25)\n- `n_frames` : number of TIS frames, or measurements, this correspond\
    \ to\n  the time axis in the TIS datacube.\n\n``` python\nplt.figure(figsize=(16,\
    \ 6))\nlongitudes = ms_reader.geom_ls[file_key]['MERTIS_TIS_GEOMETRY_TARGET_LONGITUDE']\n\
    longitudes_center = longitudes[0,:,:]\nlatitudes = ms_reader.geom_ls[file_key]['MERTIS_TIS_GEOMETRY_TARGET_LATITUDE']\n\
    latitudes_center = latitudes[0,:,:]\n\nlocal_times = ms_reader.geom_ls[file_key]['MERTIS_TIS_GEOMETRY_LOCAL_TIME']\n\
    local_times_center = local_times[0,:,:]\n\nsc = plt.scatter(longitudes_center.flatten(),\
    \ latitudes_center.flatten(), c=local_times_center.flatten(), s=10, cmap='Spectral_r')\n\
    plt.xlabel('Longitude')\ncbar = plt.colorbar(sc)\ncbar.set_label('Local Time')\n\
    plt.ylabel('Latitudes')\nplt.title('Scatter plot of Target Longitude vs Latitude\
    \ centers')\nplt.grid(True)\nplt.show()\n```\n\n![](index_files/figure-commonmark/cell-17-output-1.png)\n\
    \nLet\u2019s find some TIS sptail pixels with defined geometries on all corners\n\
    \n``` python\nimport numpy as np\n\narr = latitudes  # shape (5, 100, 21)\nnot_nan_mask\
    \ = ~np.isnan(arr)\nall_not_nan = np.all(not_nan_mask, axis=0)  # shape (100,\
    \ 21)\nindices = np.argwhere(all_not_nan)  # returns (i, j) pairs where all axis=0\
    \ are not nan\n\nprint(len(indices))\nprint(indices[:5])\n```\n\n    105\n   \
    \ [[38  0]\n     [38  1]\n     [38  2]\n     [38  3]\n     [38  4]]\n\n``` python\n\
    plt.figure(figsize=(8, 6))\n\npixel_index = indices[0]  # Take the first valid\
    \ pixel for demonstration\n\n# Plot the corners of the polygon\nplt.scatter(longitudes[1:,pixel_index[0],pixel_index[1]\
    \ ], latitudes[1:,pixel_index[0],pixel_index[1] ], s=100, c='black')\n\n# Extract\
    \ the longitude and latitude for the corners (1:5), close the polygon by repeating\
    \ the first corner\npoly_lons = longitudes[1:, pixel_index[0], pixel_index[1]]\n\
    poly_lats = latitudes[1:, pixel_index[0], pixel_index[1]]\n# Close the polygon\n\
    poly_lons = np.append(poly_lons, poly_lons[0])\npoly_lats = np.append(poly_lats,\
    \ poly_lats[0])\n\nfor i in range(1, 5):\n    plt.text(\n        poly_lons[i-1],\n\
    \        poly_lats[i-1]+0.5,  # Offset the text slightly above the point\n   \
    \     f'Corner_{i}',\n        fontsize=10,\n        color='black',\n        ha='left',\n\
    \        va='bottom'\n    )\n\n# Plot the connecting lines\nplt.plot(poly_lons,\
    \ poly_lats, linestyle='-', color='black')\n\nplt.scatter(longitudes[0,pixel_index[0],pixel_index[1]\
    \ ], latitudes[0,pixel_index[0],pixel_index[1] ], s=100)\nplt.text(\n    longitudes[0,\
    \ pixel_index[0], pixel_index[1]],\n    latitudes[0, pixel_index[0], pixel_index[1]]+0.5,\
    \  # Offset the text slightly above the point\n    'Center',\n    fontsize=12,\n\
    \    color='blue',\n    ha='left',\n    va='bottom'\n)\n```\n\n    Text(31.43904149826383,\
    \ -33.20697106068339, 'Center')\n\n![](index_files/figure-commonmark/cell-19-output-2.png)\n"
  dev_url: https://github.com/mariodamore/mertisreader/tree/master/
  doc_url: //mertisreader
  home: https://github.com/mariodamore/mertisreader/tree/master/
  license: Apache Software
  license_family: APACHE
  summary: helper routines to read ESA/Bepicolombo space mission - DLR MERTIS instrument
    data
build:
  noarch: python
  number: '0'
  script: '{{ PYTHON }} -m pip install . -vv'
extra:
  recipe-maintainers:
  - mariodamore
requirements:
  host:
  - packaging
  - python >=3.7
  run:
  - packaging
  - python >=3.7
  - rich
  - numpy
  - pandas
  - astropy
  - matplotlib
  - xmltodict
  - rich
test:
  imports:
  - mertisreader
